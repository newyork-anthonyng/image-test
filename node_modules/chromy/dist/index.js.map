{"version":3,"sources":["../src/index.js"],"names":["fs","require","CDP","uuidV4","devices","createFullscreenEmulationManager","Jimp","Document","TimeoutError","GotoTimeoutError","createChromeLauncher","completeUrl","instances","instanceId","makeSendToChromy","uuid","defaultTargetFunction","targets","filter","t","type","shift","Chromy","options","chromePath","process","env","CHROME_PATH","defaults","host","port","launchBrowser","userDataDir","chromeFlags","enableExtensions","activateOnStartUp","waitTimeout","gotoTimeout","loadTimeout","evaluateTimeout","waitFunctionPollingInterval","typeInterval","target","Object","assign","cdpOptions","client","launcher","messagePrefix","emulateMode","currentEmulateDeviceName","currentDeviceScaleFactor","userAgentBeforeEmulate","startingUrl","_sigintHandler","close","exit","on","pid","Error","push","Promise","resolve","reject","DOM","Network","Page","Runtime","Console","all","enable","_cacheChromeVersion","_chromeVersion","console","warn","_getTargetIdFromOption","targetId","Target","activateTarget","userAgent","headers","_activateOnDocumentUpdatedListener","err","catch","e","getTargets","result","page","targetInfos","kill","removeListener","i","ua","_checkStart","setUserAgentOverride","setExtraHTTPHeaders","Security","setOverrideCertificateErrors","override","certificateError","eventId","handleCertificateError","action","callback","messageAdded","payload","msg","message","text","pre","substring","length","apply","f","defineFunction","sendToChromy","data","JSON","parse","url","defaultOptions","waitLoadEvent","response","listener","eventName","_waitFinish","navigate","loadEventFired","promise","evaluate","expression","ignoreCache","scriptToEvaluateOnLoad","reload","def","funcs","Array","isArray","_moduleToFunctionSources","toString","module","funcName","func","src","trim","x","y","opts","Input","dispatchMouseEvent","button","time","Date","now","timestamp","synthesizeTapGesture","tapCount","selector","files","paramFiles","getDocument","root","querySelector","nodeId","fileNodeId","setFileInputFiles","format","quality","undefined","fromSurface","useDeviceResolution","params","indexOf","captureParams","captureScreenshot","captureResult","image","Buffer","from","_getScreenInfo","screen","devicePixelRatio","read","img","fmt","MIME_PNG","MIME_JPEG","scale","RESIZE_BEZIER","getBuffer","buffer","model","emulation","emulate","screenshotParams","screenshot","reset","_restoreEmulationSetting","_screenshotSelector","window","pixelRatio","scrollTo","getBoundingClientRect","rect","width","height","clip","left","top","screenshotOpts","selectors","_screenshotMultipleSelectors","useQuerySelectorAll","selIdx","rects","rectAll","r","reason","rectIdx","printToPDF","screencastFrame","screencastFrameAck","sessionId","startScreencast","stopScreencast","requestWillBeSent","event","parameter","send","once","removeAllListeners","file_or_buffer","readFile","encoding","script","replace","expr","style","deviceScaleFactor","Emulation","setDeviceMetricsOverride","mobile","deviceName","device","fitWindow","pageScaleFactor","platform","setTouchEmulationEnabled","enabled","configuration","clearDeviceMetricsOverride","setDeviceScaleFactor","urls","setBlockedURLs","clearBrowserCache","paramArray","location","href","currentUrl","map","obj","item","setCookie","name","nameArray","paramUrl","n","deleteCookie","cookieName","clearBrowserCookies","Memory","getDOMCounters","origin","Storage","clearDataForOrigin","storageTypes","start","_getChromeVersion","v","navigator","match","parseInt","cusDevices","forEach","copy","concat","promises","exports"],"mappings":"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","file":"index.js","sourcesContent":["const fs = require('fs')\n\nconst CDP = require('chrome-remote-interface')\nconst uuidV4 = require('uuid/v4')\nconst devices = require('./devices')\nconst {createFullscreenEmulationManager} = require('./emulation')\nconst Jimp = require('jimp')\n\nconst Document = require('./document')\n\nconst {\n  TimeoutError,\n  GotoTimeoutError,\n} = require('./error')\nconst {\n  createChromeLauncher,\n  completeUrl,\n} = require('./util')\n\nlet instances = []\nlet instanceId = 1\n\nfunction makeSendToChromy (uuid) {\n  return `\n  function () {\n    console.info('${uuid}:' + JSON.stringify(arguments))\n  }\n  `\n}\n\nfunction defaultTargetFunction (targets) {\n  return targets.filter(t => t.type === 'page').shift()\n}\n\nclass Chromy extends Document {\n  constructor (options = {}) {\n    super(null, null, null)\n    let chromePath =  null\n    if (options.chromePath) {\n      chromePath = options.chromePath\n    } else if (process.env.CHROME_PATH) {\n      chromePath = process.env.CHROME_PATH\n    }\n    const defaults = {\n      host: 'localhost',\n      port: 9222,\n      launchBrowser: true,\n      userDataDir: null,\n      chromeFlags: [],\n      chromePath: chromePath,\n      enableExtensions: false,\n      activateOnStartUp: true,\n      waitTimeout: 30000,\n      gotoTimeout: 30000,\n      loadTimeout: 30000,\n      evaluateTimeout: 30000,\n      waitFunctionPollingInterval: 100,\n      typeInterval: 20,\n      target: defaultTargetFunction,\n    }\n    this.options = Object.assign({}, defaults, options)\n    this.cdpOptions = {\n      host: this.options.host,\n      port: this.options.port,\n      target: this.options.target,\n    }\n    this.client = null\n    this.launcher = null\n    this.messagePrefix = null\n    this.emulateMode = false\n    this.currentEmulateDeviceName = null\n    this.currentDeviceScaleFactor = null\n    this.userAgentBeforeEmulate = null\n    this.instanceId = instanceId++\n  }\n\n  static addCustomDevice (cusDevices = []) {\n    if (!Array.isArray(cusDevices)) {\n      cusDevices = [cusDevices]\n    }\n    cusDevices.forEach(item => {\n      devices[item.name] = item\n    })\n  }\n\n  async start (startingUrl = null) {\n    if (startingUrl === null) {\n      startingUrl = 'about:blank'\n    }\n    if (this.client !== null) {\n      return\n    }\n\n    if (this.options.launchBrowser) {\n      if (this.launcher === null) {\n        this.launcher = await createChromeLauncher(completeUrl(startingUrl), this.options)\n        this._sigintHandler = async () => {\n          await this.close()\n          process.exit(130)\n        }\n        process.on('SIGINT', this._sigintHandler)\n      }\n\n      if (!this.launcher.pid) {\n        throw new Error('Failed to launch a browser.')\n      }\n      instances.push(this)\n    }\n\n    await new Promise((resolve, reject) => {\n      CDP(this.cdpOptions, async (client) => {\n        try {\n          this.client = client\n          const {DOM, Network, Page, Runtime, Console} = client\n          await Promise.all([DOM.enable(), Network.enable(), Page.enable(), Runtime.enable(), Console.enable()])\n\n          await this._cacheChromeVersion()\n          if (this._chromeVersion < 61) {\n            console.warn('Chromy requires Chrome ver.61 or later. Please install latest version Chrome.')\n          }\n\n          // activate first tab\n          if (this.options.activateOnStartUp) {\n            let targetId = await this._getTargetIdFromOption()\n            await this.client.Target.activateTarget({targetId: targetId})\n          }\n\n          if ('userAgent' in this.options) {\n            await this.userAgent(this.options.userAgent)\n          }\n          if ('headers' in this.options) {\n            await this.headers(this.options.headers)\n          }\n          this._activateOnDocumentUpdatedListener()\n          resolve(this)\n        } catch (e) {\n          reject(e)\n        }\n      }).on('error', (err) => {\n        reject(err)\n      })\n    }).catch(e => {\n      throw e\n    })\n  }\n\n  async _getTargetIdFromOption () {\n    if (typeof this.options.target === 'function') {\n      const result = await this.client.Target.getTargets()\n      const page = this.options.target(result.targetInfos)\n      return page.targetId\n    } else if (typeof this.options.target === 'object') {\n      return this.options.target.targetId\n    } else if (typeof this.options.target === 'string') {\n      return this.options.target\n    } else {\n      throw new Error('type of `target` option is invalid.')\n    }\n  }\n\n  async close () {\n    if (this.client === null) {\n      return false\n    }\n    await this.client.close()\n    this.client = null\n    if (this.launcher !== null) {\n      await this.launcher.kill()\n      process.removeListener('SIGINT', this._sigintHandler)\n      this.launcher = null\n    }\n    instances = instances.filter(i => i.instanceId !== this.instanceId)\n    return true\n  }\n\n  static async cleanup () {\n    const copy = [].concat(instances)\n    const promises = copy.map(i => i.close())\n    await Promise.all(promises)\n  }\n\n  async getPageTargets () {\n    const result = await this.client.Target.getTargets()\n    return result.targetInfos.filter(t => t.type === 'page')\n  }\n\n  async userAgent (ua) {\n    await this._checkStart()\n    return await this.client.Network.setUserAgentOverride({'userAgent': ua})\n  }\n\n  /**\n   * Example:\n   * chromy.headers({'X-Requested-By': 'foo'})\n   */\n  async headers (headers) {\n    await this._checkStart()\n    return await this.client.Network.setExtraHTTPHeaders({'headers': headers})\n  }\n\n  async ignoreCertificateErrors () {\n    await this._checkStart()\n    await this.client.Security.enable()\n    await this.client.Security.setOverrideCertificateErrors({override: true})\n    await this.client.Security.certificateError(({eventId}) => {\n      this.client.Security.handleCertificateError({\n        eventId,\n        action: 'continue',\n      })\n    })\n  }\n\n  async console (callback) {\n    await this._checkStart()\n    this.client.Console.messageAdded((payload) => {\n      try {\n        const msg = payload.message.text\n        const pre = this.messagePrefix\n        if (typeof msg !== 'undefined') {\n          if (pre === null || msg.substring(0, pre.length + 1) !== pre + ':') {\n            callback.apply(this, [msg, payload.message])\n          }\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n  }\n\n  async receiveMessage (callback) {\n    await this._checkStart()\n    const uuid = uuidV4()\n    this.messagePrefix = uuid\n    const f = makeSendToChromy(this.messagePrefix)\n    this.defineFunction({sendToChromy: f})\n    this.client.Console.messageAdded((payload) => {\n      try {\n        const msg = payload.message.text\n        if (msg && msg.substring(0, uuid.length + 1) === uuid + ':') {\n          const data = JSON.parse(msg.substring(uuid.length + 1))\n          callback.apply(this, [data])\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n  }\n\n  async goto (url, options) {\n    const defaultOptions = {\n      waitLoadEvent: true,\n    }\n    options = Object.assign({}, defaultOptions, options)\n    await this._checkStart(url)\n    let response = null\n    let listener = (payload) => {\n      if (payload.response.url === url) {\n        response = payload.response\n      }\n    }\n    const eventName = 'Network.responseReceived'\n    await this.on(eventName, listener)\n    try {\n      await this._waitFinish(this.options.gotoTimeout, async () => {\n        await this.client.Page.navigate({url: completeUrl(url)})\n        if (options.waitLoadEvent) {\n          await this.client.Page.loadEventFired()\n        }\n      })\n    } catch (e) {\n      if (e instanceof TimeoutError) {\n        throw new GotoTimeoutError('goto() timeout')\n      } else {\n        throw e\n      }\n    } finally {\n      await this.removeListener(eventName, listener)\n    }\n    return response\n  }\n\n  async waitLoadEvent () {\n    await this._waitFinish(this.options.loadTimeout, async () => {\n      await this.client.Page.loadEventFired()\n    })\n  }\n\n  async forward () {\n    const f = 'window.history.forward()'\n    const promise = this.waitLoadEvent()\n    await this.client.Runtime.evaluate({expression: f})\n    await promise\n  }\n\n  async back () {\n    const f = 'window.history.back()'\n    const promise = this.waitLoadEvent()\n    await this.client.Runtime.evaluate({expression: f})\n    await promise\n  }\n\n  async reload (ignoreCache, scriptToEvaluateOnLoad) {\n    await this.client.Page.reload({ignoreCache, scriptToEvaluateOnLoad})\n  }\n\n  /**\n   * define function\n   *\n   * @param func {(function|string|Array.<function>|Array.<string>)}\n   * @returns {Promise.<void>}\n   */\n  async defineFunction (def) {\n    let funcs = []\n    if (Array.isArray(def)) {\n      funcs = def\n    } else if ((typeof def) === 'object') {\n      funcs = this._moduleToFunctionSources(def)\n    } else {\n      funcs.push(def)\n    }\n    for (let i = 0; i < funcs.length; i++) {\n      let f = funcs[i]\n      if ((typeof f) === 'function') {\n        f = f.toString()\n      }\n      await this.client.Runtime.evaluate({expression: f})\n    }\n  }\n\n  _moduleToFunctionSources (module) {\n    const result = []\n    for (let funcName in module) {\n      let func = module[funcName]\n      let src = `function ${funcName} () { return (${func.toString()})(...arguments) }`.trim()\n      result.push(src)\n    }\n    return result\n  }\n\n  async mouseMoved (x, y, options = {}) {\n    const opts = Object.assign({type: 'mouseMoved', x: x, y: y}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async mousePressed (x, y, options = {}) {\n    const opts = Object.assign({type: 'mousePressed', x: x, y: y, button: 'left'}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async mouseReleased (x, y, options = {}) {\n    const opts = Object.assign({type: 'mouseReleased', x: x, y: y, button: 'left'}, options)\n    await this.client.Input.dispatchMouseEvent(opts)\n  }\n\n  async tap (x, y, options = {}) {\n    const time = Date.now() / 1000\n    const opts = Object.assign({x: x, y: y, timestamp: time, button: 'left'}, options)\n    await this.client.Input.synthesizeTapGesture(opts)\n  }\n\n  async doubleTap (x, y, options = {}) {\n    const time = Date.now() / 1000\n    const opts = Object.assign({x: x, y: y, timestamp: time, button: 'left', tapCount: 2}, options)\n    await this.client.Input.synthesizeTapGesture(opts)\n  }\n\n  async setFile (selector, files) {\n    let paramFiles = files\n    if ((typeof files) === 'string') {\n      paramFiles = [files]\n    }\n    if (paramFiles.length === 0) {\n      return\n    }\n    const {root} = await this.client.DOM.getDocument()\n    const {nodeId: fileNodeId} = await this.client.DOM.querySelector({\n      nodeId: root.nodeId,\n      selector: selector,\n    })\n    if (!fileNodeId) {\n      return\n    }\n    await this.client.DOM.setFileInputFiles({\n      nodeId: fileNodeId,\n      files: paramFiles,\n    })\n  }\n\n  async screenshot (format = 'png', quality = undefined, fromSurface = true) {\n    let opts = {\n      format: 'png',\n      fromSurface: true,\n      useDeviceResolution: false,\n    }\n    if ((typeof format) === 'string') {\n      // deprecated arguments style\n      const params = {\n        format: format,\n        quality: quality,\n        fromSurface: fromSurface,\n      }\n      opts = Object.assign({}, opts, params)\n    } else if ((typeof format) === 'object') {\n      opts = Object.assign({}, opts, format)\n    }\n    if (['png', 'jpeg'].indexOf(opts.format) === -1) {\n      throw new Error('format is invalid.')\n    }\n    const captureParams = Object.assign({}, opts)\n    delete captureParams.useDeviceResolution\n    let captureResult = await this.client.Page.captureScreenshot(captureParams)\n    let image = Buffer.from(captureResult.data, 'base64')\n    if (!opts.useDeviceResolution) {\n      const screen = await this._getScreenInfo()\n      if (screen.devicePixelRatio !== 1) {\n        let promise = new Promise((resolve, reject) => {\n          Jimp.read(image, (err, img) => {\n            if (err) {\n              return reject(err)\n            }\n            let fmt = opts.format === 'png' ? Jimp.MIME_PNG : Jimp.MIME_JPEG\n            let quality = 100\n            if (opts.quality) {\n              quality = opts.quality\n            }\n            img.scale(1.0 / screen.devicePixelRatio, Jimp.RESIZE_BEZIER)\n              .quality(quality)\n              .getBuffer(fmt, (err, buffer) => {\n                if (err) {\n                  reject(err)\n                } else {\n                  resolve(buffer)\n                }\n              })\n          })\n        })\n        image = await promise\n      }\n    }\n    return image\n  }\n\n  /*\n   * Limitation:\n   * maximum height is 16384px because of chrome's bug from Skia library.\n   * https://groups.google.com/a/chromium.org/d/msg/headless-dev/DqaAEXyzvR0/kUTEqNYiDQAJ\n   * https://stackoverflow.com/questions/44599858/max-height-of-16-384px-for-headless-chrome-screenshots\n   */\n  async screenshotDocument (model = 'scroll', format = 'png', quality = undefined, fromSurface = true) {\n    let opts = {\n      model: 'scroll',\n      format: 'png',\n      fromSurface: true,\n      useDeviceResolution: false,\n    }\n    if ((typeof model) === 'string') {\n      const params = {\n        model: model,\n        format: format,\n        quality: quality,\n        fromSurface: fromSurface,\n      }\n      opts = Object.assign({}, opts, params)\n    } else if ((typeof model) === 'object') {\n      opts = Object.assign({}, opts, model)\n    }\n    const emulation = await createFullscreenEmulationManager(this, opts.model, false, opts.useDeviceResolution)\n\n    let result = null\n    try {\n      await emulation.emulate()\n      // device resolution is already emulated by emulation manager, so useDeviceResotion must be set true\n      const screenshotParams = Object.assign({}, opts, {useDeviceResolution: true})\n      delete screenshotParams.model\n      result = await this.screenshot(screenshotParams)\n    } finally {\n      await emulation.reset()\n      // restore emulation mode\n      await this._restoreEmulationSetting()\n    }\n    return result\n  }\n\n  async screenshotSelector (selector, format = 'png', quality = undefined, fromSurface = true) {\n    let opts = {\n      format: 'png',\n      fromSurface: true,\n      useDeviceResolution: false,\n    }\n    if ((typeof format) === 'string') {\n      const params = {\n        format: format,\n        quality: quality,\n        fromSurface: fromSurface,\n      }\n      opts = Object.assign({}, opts, params)\n    } else if ((typeof format) === 'object') {\n      opts = Object.assign({}, opts, format)\n    }\n    return this._screenshotSelector(selector, opts)\n  }\n\n  async _screenshotSelector (selector, opts) {\n    let scale = null\n    if (opts.useDeviceResolution) {\n      scale = 1\n    } else {\n      const pixelRatio = await this.evaluate(function () {\n        return window.devicePixelRatio\n      })\n      scale = 1.0 / pixelRatio\n    }\n    const emulation = await createFullscreenEmulationManager(this, 'scroll', true, opts.useDeviceResolution)\n    let buffer = null\n    try {\n      await emulation.emulate()\n      await this.scrollTo(0, 0)\n      let rect = await this.getBoundingClientRect(selector)\n      if (!rect || rect.width === 0 || rect.height === 0) {\n        return null\n      }\n      let clip = {\n        x: rect.left,\n        y: rect.top,\n        width: rect.width,\n        height: rect.height,\n        scale: 1,\n      }\n      let screenshotOpts = Object.assign({}, opts, {clip})\n      const {data} = await this.client.Page.captureScreenshot(screenshotOpts)\n      buffer = Buffer.from(data, 'base64')\n    } finally {\n      emulation.reset()\n    }\n    return buffer\n  }\n\n  async screenshotMultipleSelectors (selectors, callback, options = {}) {\n    return this._screenshotMultipleSelectors(selectors, callback, options)\n  }\n\n  async _screenshotMultipleSelectors (selectors, callback, options = {}) {\n    const defaults = {\n      model: 'scroll',\n      format: 'png',\n      quality: undefined,\n      fromSurface: true,\n      useDeviceResolution: false,\n      useQuerySelectorAll: false,\n    }\n    const opts = Object.assign({}, defaults, options)\n    const emulation = await createFullscreenEmulationManager(this, 'scroll', true, opts.useDeviceResolution)\n    await emulation.emulate()\n    try {\n      for (let selIdx = 0; selIdx < selectors.length; selIdx++) {\n        let selector = selectors[selIdx]\n        try {\n          let rects = null\n          if (opts.useQuerySelectorAll) {\n            rects = await this.rectAll(selector)\n            // remove elements that has 'display: none'\n            rects = rects.filter(rect => rect.width !== 0 && rect.height !== 0)\n          } else {\n            const r = await this.getBoundingClientRect(selector)\n            if (r && r.width !== 0 && r.height !== 0) {\n              rects = [r]\n            }\n          }\n          if (rects.length === 0) {\n            const err = {reason: 'notfound', message: `selector is not found. selector=${selector}`}\n            await callback.apply(this, [err, null, selIdx, selectors])\n            continue\n          }\n\n          for (let rectIdx = 0; rectIdx < rects.length; rectIdx++) {\n            const rect = rects[rectIdx]\n            let clip = {\n              x: rect.left,\n              y: rect.top,\n              width: rect.width,\n              height: rect.height,\n              scale: 1,\n            }\n            let screenshotOpts = Object.assign({\n              format: opts.format,\n              quality: opts.quality,\n              fromSurface: opts.fromSurface,\n              clip,\n            })\n            const {data} = await this.client.Page.captureScreenshot(screenshotOpts)\n            let buffer = Buffer.from(data, 'base64')\n            await callback.apply(this, [null, buffer, selIdx, selectors, rectIdx])\n          }\n        } catch (e) {\n          await callback.apply(this, [e, null, selIdx, selectors])\n        }\n      }\n    } finally {\n      await emulation.reset()\n      await this._restoreEmulationSetting()\n    }\n  }\n\n  async pdf (options = {}) {\n    const {data} = await this.client.Page.printToPDF(options)\n    return Buffer.from(data, 'base64')\n  }\n\n  async startScreencast (callback, options = {}) {\n    await this.client.Page.screencastFrame(async (payload) => {\n      await callback.apply(this, [payload])\n      await this.client.Page.screencastFrameAck({sessionId: payload.sessionId})\n    })\n    await this.client.Page.startScreencast(options)\n  }\n\n  async stopScreencast () {\n    await this.client.Page.stopScreencast()\n  }\n\n  // deprecated since 0.3.4\n  async requestWillBeSent (callback) {\n    await this._checkStart()\n    await this.client.Network.requestWillBeSent(callback)\n  }\n\n  async send (event, parameter) {\n    await this._checkStart()\n    return this.client.send(event, parameter)\n  }\n\n  async on (event, callback) {\n    await this._checkStart()\n    this.client.on(event, callback)\n  }\n\n  async once (event, callback) {\n    await this._checkStart()\n    this.client.once(event, callback)\n  }\n\n  async removeListener (event, callback) {\n    await this._checkStart()\n    this.client.removeListener(event, callback)\n  }\n\n  async removeAllListeners (event) {\n    await this._checkStart()\n    this.client.removeAllListeners(event)\n  }\n\n  async inject (type, file_or_buffer) {\n    const data = file_or_buffer instanceof Buffer ?\n      file_or_buffer.toString('utf8') :\n      await new Promise((resolve, reject) => {\n      fs.readFile(file_or_buffer, {encoding: 'utf-8'}, (err, data) => {\n        if (err) reject(err)\n        resolve(data)\n      })\n    }).catch(e => {\n      throw e\n    })\n    if (type === 'js') {\n      let script = data.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, '\\\\\\'').replace(/(\\r|\\n)/g, '\\\\n')\n      let expr = `\n      {\n         let script = document.createElement('script')\n         script.type = 'text/javascript'\n         script.innerHTML = '${script}'\n         document.body.appendChild(script)\n      }\n      `\n      return this.evaluate(expr)\n    } else if (type === 'css') {\n      let style = data.replace(/`/g, '\\\\`').replace(/\\\\/g, '\\\\\\\\') // .replace(/(\\r|\\n)/g, ' ')\n      let expr = `\n      {\n         let style = document.createElement('style')\n         style.type = 'text/css'\n         style.innerText = \\`\n        ${style}\n        \\`\n         document.head.appendChild(style)\n      }\n      `\n      return this.evaluate(expr)\n    } else {\n      throw new Error('found invalid type.')\n    }\n  }\n\n  async setDeviceScaleFactor (deviceScaleFactor) {\n    const screen = await this._getScreenInfo()\n    if (screen.devicePixelRatio === deviceScaleFactor) {\n      return\n    }\n    this.currentDeviceScaleFactor = deviceScaleFactor\n    return this.client.Emulation.setDeviceMetricsOverride({\n      width: 0, height: 0, deviceScaleFactor: deviceScaleFactor, mobile: false,\n    })\n  }\n\n  async emulate (deviceName) {\n    await this._checkStart()\n\n    if (!this.emulateMode) {\n      this.userAgentBeforeEmulate = await this.evaluate('return navigator.userAgent')\n    }\n    const device = devices[deviceName]\n    await this.client.Emulation.setDeviceMetricsOverride({\n      width: device.width,\n      height: device.height,\n      deviceScaleFactor: device.deviceScaleFactor,\n      mobile: device.mobile,\n      fitWindow: false,\n      scale: device.pageScaleFactor,\n    })\n    const platform = device.mobile ? 'mobile' : 'desktop'\n    await this.client.Emulation.setTouchEmulationEnabled({enabled: true, configuration: platform})\n    await this.userAgent(device.userAgent)\n    this.currentEmulateDeviceName = deviceName\n    this.emulateMode = true\n  }\n\n  async clearEmulate () {\n    await this.client.Emulation.clearDeviceMetricsOverride()\n    await this.client.Emulation.setTouchEmulationEnabled({enabled: false})\n    if (this.userAgentBeforeEmulate) {\n      await this.userAgent(this.userAgentBeforeEmulate)\n    }\n    this.emulateMode = false\n    this.currentEmulateDeviceName = null\n  }\n\n  async _restoreEmulationSetting () {\n    // restore emulation mode\n    if (this.currentEmulateDeviceName !== null) {\n      await this.emulate(this.currentEmulateDeviceName)\n    }\n    if (this.currentDeviceScaleFactor) {\n      await this.setDeviceScaleFactor(this.currentDeviceScaleFactor)\n    }\n  }\n\n  async blockUrls (urls) {\n    await this._checkStart()\n    await this.client.Network.setBlockedURLs({urls: urls})\n  }\n\n  async clearBrowserCache () {\n    await this._checkStart()\n    await this.client.Network.clearBrowserCache()\n  }\n\n  async setCookie (params) {\n    await this._checkStart()\n    let paramArray = null\n    if (Array.isArray(params)) {\n      paramArray = params\n    } else {\n      paramArray = [params]\n    }\n    const currentUrl = await this.evaluate(_ => { return location.href })\n    paramArray = paramArray.map(obj => {\n      if (obj.url) {\n        return obj\n      } else {\n        obj.url = currentUrl\n        return obj\n      }\n    })\n    for (let i in paramArray) {\n      const item = paramArray[i]\n      await this.client.Network.setCookie(item)\n    }\n  }\n\n  async deleteCookie (name, url = null) {\n    await this._checkStart()\n    let nameArray = null\n    if (Array.isArray(name)) {\n      nameArray = name\n    } else {\n      nameArray = [name]\n    }\n    let paramUrl = url\n    if (!url) {\n      paramUrl = await this.evaluate(_ => { return location.href })\n    }\n    for (let i in nameArray) {\n      const n = nameArray[i]\n      await this.client.Network.deleteCookie({cookieName: n, url: paramUrl})\n    }\n  }\n\n  async clearAllCookies () {\n    await this._checkStart()\n    await this.client.Network.clearBrowserCookies()\n  }\n\n  async getDOMCounters () {\n    return await this.client.Memory.getDOMCounters()\n  }\n\n  async clearDataForOrigin (origin = null, type = 'all') {\n    if (origin === null) {\n      origin = await this.evaluate(_ => { return location.origin })\n    }\n    return await this.client.Storage.clearDataForOrigin({origin: origin, storageTypes: type})\n  }\n\n  async _checkStart (startingUrl = null) {\n    if (this.client === null) {\n      await this.start(startingUrl)\n    }\n  }\n\n  async _cacheChromeVersion () {\n    this._chromeVersion = await this._getChromeVersion()\n  }\n\n  async _getChromeVersion () {\n    return this.evaluate(_ => {\n      let v = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)\n      return v ? parseInt(v[2], 10) : false\n    })\n  }\n}\n\nmodule.exports = Chromy\n\n"]}